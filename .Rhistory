task_data = read.csv("Data\\onet_tasks.csv")
setwd("~/ARUE_Kubara/project/RRcourse2025")
task_data = read.csv("Data\\onet_tasks.csv")
# read employment data from Eurostat
# These datasets include quarterly information on the number of workers in specific
# 1-digit ISCO occupation categories. (Check here for details: https://www.ilo.org/public/english/bureau/stat/isco/isco08/)
library(readxl)
isco1 <- read_excel("Data\\Eurostat_employment_isco.xlsx", sheet="ISCO1")
isco2 <- read_excel("Data\\Eurostat_employment_isco.xlsx", sheet="ISCO2")
isco3 <- read_excel("Data\\Eurostat_employment_isco.xlsx", sheet="ISCO3")
isco4 <- read_excel("Data\\Eurostat_employment_isco.xlsx", sheet="ISCO4")
isco5 <- read_excel("Data\\Eurostat_employment_isco.xlsx", sheet="ISCO5")
isco6 <- read_excel("Data\\Eurostat_employment_isco.xlsx", sheet="ISCO6")
isco7 <- read_excel("Data\\Eurostat_employment_isco.xlsx", sheet="ISCO7")
isco8 <- read_excel("Data\\Eurostat_employment_isco.xlsx", sheet="ISCO8")
isco9 <- read_excel("Data\\Eurostat_employment_isco.xlsx", sheet="ISCO9")
# This will calculate worker totals in each of the chosen countries.
total_Belgium = isco1$Belgium + isco2$Belgium + isco3$Belgium + isco4$Belgium + isco5$Belgium + isco6$Belgium + isco7$Belgium + isco8$Belgium + isco9$Belgium
total_Spain = isco1$Spain + isco2$Spain + isco3$Spain + isco4$Spain + isco5$Spain + isco6$Spain + isco7$Spain + isco8$Spain + isco9$Spain
total_Poland = isco1$Poland + isco2$Poland + isco3$Poland + isco4$Poland + isco5$Poland + isco6$Poland + isco7$Poland + isco8$Poland + isco9$Poland
# Let's merge all these datasets. We'll need a column that stores the occupation categories:
isco1$ISCO <- 1
isco2$ISCO <- 2
isco3$ISCO <- 3
isco4$ISCO <- 4
isco5$ISCO <- 5
isco6$ISCO <- 6
isco7$ISCO <- 7
isco8$ISCO <- 8
isco9$ISCO <- 9
# and this gives us one large file with employment in all occupations.
all_data <- rbind(isco1, isco2, isco3, isco4, isco5, isco6, isco7, isco8, isco9)
# We have 9 occupations and the same time range for each, so we an add the totals by
# adding a vector that is 9 times the previously calculated totals
all_data$total_Belgium <- c(total_Belgium, total_Belgium, total_Belgium, total_Belgium, total_Belgium, total_Belgium, total_Belgium, total_Belgium, total_Belgium)
all_data$total_Spain <- c(total_Spain, total_Spain, total_Spain, total_Spain, total_Spain, total_Spain, total_Spain, total_Spain, total_Spain)
all_data$total_Poland <- c(total_Poland, total_Poland, total_Poland, total_Poland, total_Poland, total_Poland, total_Poland, total_Poland, total_Poland)
# And this will give us shares of each occupation among all workers in a period-country
all_data$share_Belgium = all_data$Belgium/all_data$total_Belgium
all_data$share_Spain = all_data$Spain/all_data$total_Spain
all_data$share_Poland = all_data$Poland/all_data$total_Poland
# Now let's look at the task data. We want the first digit of the ISCO variable only
library(stringr)
task_data$isco08_1dig <- str_sub(task_data$isco08, 1, 1) %>% as.numeric()
aggdata <-aggregate(task_data, by=list(task_data$isco08_1dig),
FUN=mean, na.rm=TRUE)
aggdata$isco08 <- NULL
#Let's combine the data.
library(dplyr)
combined <- left_join(all_data, aggdata, by = c("ISCO" = "isco08_1dig"))
#install.packages("Hmisc")
library(Hmisc)
# first task item
temp_mean <- wtd.mean(combined$t_4A2a4, combined$share_Belgium)
temp_sd <- wtd.var(combined$t_4A2a4, combined$share_Belgium) %>% sqrt()
combined$std_Belgium_t_4A2a4 = (combined$t_4A2a4-temp_mean)/temp_sd
temp_mean <- wtd.mean(combined$t_4A2a4, combined$share_Poland)
temp_sd <- wtd.var(combined$t_4A2a4, combined$share_Poland) %>% sqrt()
combined$std_Poland_t_4A2a4 = (combined$t_4A2a4-temp_mean)/temp_sd
temp_mean <- wtd.mean(combined$t_4A2a4, combined$share_Spain)
temp_sd <- wtd.var(combined$t_4A2a4, combined$share_Spain) %>% sqrt()
combined$std_Spain_t_4A2a4 = (combined$t_4A2a4-temp_mean)/temp_sd
# second task item
temp_mean <- wtd.mean(combined$t_4A2b2, combined$share_Belgium)
temp_sd <- wtd.var(combined$t_4A2b2, combined$share_Belgium) %>% sqrt()
combined$std_Belgium_t_4A2b2 = (combined$t_4A2b2-temp_mean)/temp_sd
temp_mean <- wtd.mean(combined$t_4A2b2, combined$share_Poland)
temp_sd <- wtd.var(combined$t_4A2b2, combined$share_Poland) %>% sqrt()
combined$std_Poland_t_4A2b2 = (combined$t_4A2b2-temp_mean)/temp_sd
temp_mean <- wtd.mean(combined$t_4A2b2, combined$share_Spain)
temp_sd <- wtd.var(combined$t_4A2b2, combined$share_Spain) %>% sqrt()
combined$std_Spain_t_4A2b2 = (combined$t_4A2b2-temp_mean)/temp_sd
# third task item
temp_mean <- wtd.mean(combined$t_4A4a1 , combined$share_Belgium)
temp_sd <- wtd.var(combined$t_4A4a1 , combined$share_Belgium) %>% sqrt()
combined$std_Belgium_t_4A4a1  = (combined$t_4A4a1 -temp_mean)/temp_sd
temp_mean <- wtd.mean(combined$t_4A4a1 , combined$share_Poland)
temp_sd <- wtd.var(combined$t_4A4a1 , combined$share_Poland) %>% sqrt()
combined$std_Poland_t_4A4a1  = (combined$t_4A4a1 -temp_mean)/temp_sd
temp_mean <- wtd.mean(combined$t_4A4a1 , combined$share_Spain)
temp_sd <- wtd.var(combined$t_4A4a1 , combined$share_Spain) %>% sqrt()
combined$std_Spain_t_4A4a1  = (combined$t_4A4a1 -temp_mean)/temp_sd
combined$Belgium_NRCA <- combined$std_Belgium_t_4A2a4 + combined$std_Belgium_t_4A2b2 + combined$std_Belgium_t_4A4a1
combined$Poland_NRCA <- combined$std_Poland_t_4A2a4 + combined$std_Poland_t_4A2b2 + combined$std_Poland_t_4A4a1
combined$Spain_NRCA <- combined$std_Spain_t_4A2a4 + combined$std_Spain_t_4A2b2 + combined$std_Spain_t_4A4a1
# And we standardise NRCA in a similar way.
temp_mean <- wtd.mean(combined$Belgium_NRCA, combined$share_Belgium)
temp_sd <- wtd.var(combined$Belgium_NRCA, combined$share_Belgium) %>% sqrt()
combined$std_Belgium_NRCA = (combined$Belgium_NRCA-temp_mean)/temp_sd
temp_mean <- wtd.mean(combined$Poland_NRCA, combined$share_Poland)
temp_sd <- wtd.var(combined$Poland_NRCA, combined$share_Poland) %>% sqrt()
combined$std_Poland_NRCA = (combined$Poland_NRCA-temp_mean)/temp_sd
temp_mean <- wtd.mean(combined$Spain_NRCA, combined$share_Spain)
temp_sd <- wtd.var(combined$Spain_NRCA, combined$share_Spain) %>% sqrt()
combined$std_Spain_NRCA = (combined$Spain_NRCA-temp_mean)/temp_sd
# Finally, to track the changes over time, we have to calculate a country-level mean
# Step 1: multiply the value by the share of such workers.
combined$multip_Spain_NRCA <- (combined$std_Spain_NRCA*combined$share_Spain)
combined$multip_Belgium_NRCA <- (combined$std_Belgium_NRCA*combined$share_Belgium)
combined$multip_Poland_NRCA <- (combined$std_Poland_NRCA*combined$share_Poland)
# Step 2: sum it up (it basically becomes another weighted mean)
agg_Spain <-aggregate(combined$multip_Spain_NRCA, by=list(combined$TIME),
FUN=sum, na.rm=TRUE)
agg_Belgium <-aggregate(combined$multip_Belgium_NRCA, by=list(combined$TIME),
FUN=sum, na.rm=TRUE)
agg_Poland <-aggregate(combined$multip_Poland_NRCA, by=list(combined$TIME),
FUN=sum, na.rm=TRUE)
# We can plot it now!
plot(agg_Poland$x, xaxt="n")
axis(1, at=seq(1, 40, 3), labels=agg_Poland$Group.1[seq(1, 40, 3)])
plot(agg_Spain$x, xaxt="n")
axis(1, at=seq(1, 40, 3), labels=agg_Spain$Group.1[seq(1, 40, 3)])
plot(agg_Belgium$x, xaxt="n")
axis(1, at=seq(1, 40, 3), labels=agg_Belgium$Group.1[seq(1, 40, 3)])
# If this code gets automated and cleaned properly,
# If this code gets automated and cleaned properly,
#  you should be able to easily add other countries as well as other tasks.
# Routine manual
# Routine manual
# 4.A.3.a.3	Controlling Machines and Processes
# Routine manual
# 4.A.3.a.3	Controlling Machines and Processes
# 4.C.2.d.1.i	Spend Time Making Repetitive Motions
# Load required packages
library(readxl)
library(stringr)
library(dplyr)
library(Hmisc)
# Define countries to analyze (easily extensible)
COUNTRIES <- c("Belgium", "Spain", "Poland")
NRCA_TASKS <- c("t_4A2a4", "t_4A2b2", "t_4A4a1")  # Non-routine cognitive analytical tasks
#' Calculate standardized values for task variables
#'
#' @param data The combined dataset
#' @param task_var The task variable to standardize
#' @param country The country to calculate for
#' @return A vector of standardized values
standardize_task <- function(data, task_var, country) {
share_var <- paste0("share_", country)
mean_val <- wtd.mean(data[[task_var]], data[[share_var]])
sd_val <- sqrt(wtd.var(data[[task_var]], data[[share_var]]))
(data[[task_var]] - mean_val) / sd_val
}
#' Calculate and aggregate NRCA index for a country
#'
#' @param data The combined dataset
#' @param country The country to calculate for
#' @return A dataframe with TIME and aggregated NRCA values
aggregate_nrca <- function(data, country) {
std_nrca_var <- paste0("std_", country, "_NRCA")
share_var <- paste0("share_", country)
# Multiply standardized NRCA by occupation shares
multip_var <- paste0("multip_", country, "_NRCA")
data[[multip_var]] <- data[[std_nrca_var]] * data[[share_var]]
# Aggregate by time
aggregate(data[[multip_var]], by = list(data$TIME), FUN = sum, na.rm = TRUE)
}
# Import task data from O*NET database
task_data <- read.csv("Data\\onet_tasks.csv")
# Extract first digit of ISCO code
task_data$isco08_1dig <- str_sub(task_data$isco08, 1, 1) %>% as.numeric()
# Aggregate task data by 1-digit ISCO
aggdata <- aggregate(task_data, by = list(task_data$isco08_1dig), FUN = mean, na.rm = TRUE)
aggdata$isco08 <- NULL
# Import employment data from Eurostat
isco_data <- lapply(1:9, function(i) {
df <- read_excel("Data\\Eurostat_employment_isco.xlsx", sheet = paste0("ISCO", i))
df$ISCO <- i  # Add occupation category
df
})
# Combine all ISCO data
all_data <- bind_rows(isco_data)
# Combine employment and task data
combined <- left_join(all_data, aggdata, by = c("ISCO" = "isco08_1dig"))
# Calculate total workers and shares for each country
for (country in COUNTRIES) {
total_var <- paste0("total_", country)
share_var <- paste0("share_", country)
# Calculate total workers across all occupations
all_data[[total_var]] <- rowSums(sapply(isco_data, function(df) df[[country]]))
# Calculate share of each occupation
all_data[[share_var]] <- all_data[[country]] / all_data[[total_var]]
}
# Load required packages
library(readxl)
library(stringr)
library(dplyr)
library(Hmisc)
# Define countries to analyze (easily extensible)
COUNTRIES <- c("Belgium", "Spain", "Poland")
NRCA_TASKS <- c("t_4A2a4", "t_4A2b2", "t_4A4a1")  # Non-routine cognitive analytical tasks
#' Calculate standardized values for task variables
#'
#' @param data The combined dataset
#' @param task_var The task variable to standardize
#' @param country The country to calculate for
#' @return A vector of standardized values
standardize_task <- function(data, task_var, country) {
share_var <- paste0("share_", country)
mean_val <- wtd.mean(data[[task_var]], data[[share_var]])
sd_val <- sqrt(wtd.var(data[[task_var]], data[[share_var]]))
(data[[task_var]] - mean_val) / sd_val
}
#' Calculate and aggregate NRCA index for a country
#'
#' @param data The combined dataset
#' @param country The country to calculate for
#' @return A dataframe with TIME and aggregated NRCA values
aggregate_nrca <- function(data, country) {
std_nrca_var <- paste0("std_", country, "_NRCA")
share_var <- paste0("share_", country)
# Multiply standardized NRCA by occupation shares
multip_var <- paste0("multip_", country, "_NRCA")
data[[multip_var]] <- data[[std_nrca_var]] * data[[share_var]]
# Aggregate by time
aggregate(data[[multip_var]], by = list(data$TIME), FUN = sum, na.rm = TRUE)
}
# Import task data from O*NET database
task_data <- read.csv("Data\\onet_tasks.csv")
# Extract first digit of ISCO code
task_data$isco08_1dig <- str_sub(task_data$isco08, 1, 1) %>% as.numeric()
# Aggregate task data by 1-digit ISCO
aggdata <- aggregate(task_data, by = list(task_data$isco08_1dig), FUN = mean, na.rm = TRUE)
aggdata$isco08 <- NULL
# Import employment data from Eurostat
isco_data <- lapply(1:9, function(i) {
df <- read_excel("Data\\Eurostat_employment_isco.xlsx", sheet = paste0("ISCO", i))
df$ISCO <- i  # Add occupation category
df
})
# Combine all ISCO data
all_data <- bind_rows(isco_data)
# Calculate total workers and shares for each country
for (country in COUNTRIES) {
total_var <- paste0("total_", country)
share_var <- paste0("share_", country)
# Calculate total workers across all occupations
all_data[[total_var]] <- rowSums(sapply(isco_data, function(df) df[[country]]))
# Calculate share of each occupation
all_data[[share_var]] <- all_data[[country]] / all_data[[total_var]]
}
# Combine employment and task data
combined <- left_join(all_data, aggdata, by = c("ISCO" = "isco08_1dig"))
# Calculate total workers and shares for each country
for (country in COUNTRIES) {
total_var <- paste0("total_", country)
share_var <- paste0("share_", country)
# Calculate total workers across all occupations for each time period
# We need to sum the country column across all ISCO data frames for each time period
time_totals <- Reduce(`+`, lapply(isco_data, function(df) df[[country]]))
# Repeat these totals for each occupation (9 times)
all_data[[total_var]] <- rep(time_totals, each = length(isco_data))
# Calculate share of each occupation
all_data[[share_var]] <- all_data[[country]] / all_data[[total_var]]
}
# Standardize task variables for each country and task
for (country in COUNTRIES) {
for (task in NRCA_TASKS) {
std_var <- paste0("std_", country, "_", task)
combined[[std_var]] <- standardize_task(combined, task, country)
}
# Calculate NRCA index for each country
nrca_var <- paste0(country, "_NRCA")
std_vars <- paste0("std_", country, "_", NRCA_TASKS)
combined[[nrca_var]] <- rowSums(combined[, std_vars])
# Standardize NRCA index
std_nrca_var <- paste0("std_", country, "_NRCA")
share_var <- paste0("share_", country)
mean_nrca <- wtd.mean(combined[[nrca_var]], combined[[share_var]])
sd_nrca <- sqrt(wtd.var(combined[[nrca_var]], combined[[share_var]]))
combined[[std_nrca_var]] <- (combined[[nrca_var]] - mean_nrca) / sd_nrca
}
# Aggregate and plot NRCA index for each country
par(mfrow = c(length(COUNTRIES), 1))  # Set up multiple plots
for (country in COUNTRIES) {
agg_result <- aggregate_nrca(combined, country)
# Plot results
plot(agg_result$x, xaxt = "n",
main = paste("NRCA Index Over Time -", country),
ylab = "NRCA Index", xlab = "Time")
axis(1, at = seq(1, 40, 3), labels = agg_result$Group.1[seq(1, 40, 3)])
}
# Load required packages
library(readxl)
library(stringr)
library(dplyr)
library(Hmisc)
# Define constants
COUNTRIES <- c("Belgium", "Spain", "Poland")
# Load required packages
library(readxl)
library(stringr)
library(dplyr)
library(Hmisc)
# Define constants
COUNTRIES <- c("Belgium", "Spain", "Poland")
NRCA_TASKS <- c("t_4A2a4", "t_4A2b2", "t_4A4a1")
# Function to standardize task variables
standardize_task <- function(data, task_var, country) {
share_var <- paste0("share_", country)
mean_val <- wtd.mean(data[[task_var]], data[[share_var]])
sd_val <- sqrt(wtd.var(data[[task_var]], data[[share_var]]))
(data[[task_var]] - mean_val) / sd_val
}
# Function to aggregate NRCA index
aggregate_nrca <- function(data, country) {
std_nrca_var <- paste0("std_", country, "_NRCA")
share_var <- paste0("share_", country)
data[[paste0("multip_", country, "_NRCA")]] <- data[[std_nrca_var]] * data[[share_var]]
aggregate(data[[paste0("multip_", country, "_NRCA")]],
by = list(data$TIME),
FUN = sum, na.rm = TRUE)
}
# 1. Load and prepare task data
task_data <- read.csv("Data\\onet_tasks.csv") %>%
mutate(isco08_1dig = str_sub(isco08, 1, 1) %>% as.numeric())
aggdata <- task_data %>%
group_by(isco08_1dig) %>%
summarise(across(starts_with("t_"), mean, na.rm = TRUE)) %>%
rename(ISCO = isco08_1dig)
# 2. Load and prepare employment data
isco_data <- lapply(1:9, function(i) {
read_excel("Data\\Eurostat_employment_isco.xlsx", sheet = paste0("ISCO", i)) %>%
mutate(ISCO = i)
})
all_data <- bind_rows(isco_data)
# 3. Calculate totals and shares
for (country in COUNTRIES) {
# Calculate totals for each time period
time_totals <- sapply(isco_data, function(df) df[[country]]) %>%
rowSums()
# Assign to all_data
all_data[[paste0("total_", country)]] <- rep(time_totals, times = 9)
all_data[[paste0("share_", country)]] <- all_data[[country]] / all_data[[paste0("total_", country)]]
}
# 4. Combine data and calculate NRCA
combined <- all_data %>%
left_join(aggdata, by = "ISCO") %>%
# Standardize task variables
mutate(across(all_of(NRCA_TASKS),
~ standardize_task(cur_data(), cur_column(), "Belgium"),
.names = "std_Belgium_{.col}")) %>%
mutate(across(all_of(NRCA_TASKS),
~ standardize_task(cur_data(), cur_column(), "Spain"),
.names = "std_Spain_{.col}")) %>%
mutate(across(all_of(NRCA_TASKS),
~ standardize_task(cur_data(), cur_column(), "Poland"),
.names = "std_Poland_{.col}"))
# Calculate NRCA indices
for (country in COUNTRIES) {
std_cols <- paste0("std_", country, "_", NRCA_TASKS)
combined[[paste0(country, "_NRCA")]] <- rowSums(combined[, std_cols])
# Standardize NRCA
share_var <- paste0("share_", country)
mean_nrca <- wtd.mean(combined[[paste0(country, "_NRCA")]], combined[[share_var]])
sd_nrca <- sqrt(wtd.var(combined[[paste0(country, "_NRCA")]], combined[[share_var]]))
combined[[paste0("std_", country, "_NRCA")]] <-
(combined[[paste0(country, "_NRCA")]] - mean_nrca) / sd_nrca
}
# 5. Plot results
par(mfrow = c(length(COUNTRIES), 1))
for (country in COUNTRIES) {
agg_result <- aggregate_nrca(combined, country)
plot(agg_result$x, xaxt = "n",
main = paste("NRCA Index Over Time -", country),
ylab = "NRCA Index", xlab = "Time", type = "l")
axis(1, at = seq(1, nrow(agg_result), 3),
labels = agg_result$Group.1[seq(1, nrow(agg_result), 3)])
}
